// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"time"
)

// Defines values for HTTPStatusEnum.
const (
	N200 HTTPStatusEnum = 200
	N201 HTTPStatusEnum = 201
	N202 HTTPStatusEnum = 202
	N204 HTTPStatusEnum = 204
	N206 HTTPStatusEnum = 206
	N299 HTTPStatusEnum = 299
	N400 HTTPStatusEnum = 400
	N401 HTTPStatusEnum = 401
	N403 HTTPStatusEnum = 403
	N404 HTTPStatusEnum = 404
	N409 HTTPStatusEnum = 409
	N422 HTTPStatusEnum = 422
	N429 HTTPStatusEnum = 429
	N500 HTTPStatusEnum = 500
	N503 HTTPStatusEnum = 503
)

// Defines values for SeverityEnum.
const (
	CRITICAL SeverityEnum = "CRITICAL"
	ERROR    SeverityEnum = "ERROR"
	INFO     SeverityEnum = "INFO"
	WARNING  SeverityEnum = "WARNING"
)

// ErrorMessage A message describing the failure, a contributing factor to the failure, or possibly the aftermath of the failure.
type ErrorMessage struct {
	// Arguments Ordered list of substitution args for the error message. Must match up with
	// the {0}, {1}, etc... actually in the message referenced by the message code
	// above, if any.
	Arguments *[]string `json:"arguments,omitempty"`

	// Code Identifier for this kind of message. This is a string that can be used to look up
	// additional information on the support website. (Note - specific format can be determined
	// by platform - hex value codes are common in midrange storage.)
	Code *string `json:"code,omitempty"`

	// Message Message string in English.
	Message *string `json:"message,omitempty"`

	// MessageL10n Localized message string.
	MessageL10n *string `json:"message_l10n,omitempty"`

	// Severity The severity of the condition.
	// * INFO - Information that may be of use in understanding the failure. It is not a problem to fix.
	// * WARNING - A condition that isn't a failure, but may be unexpected or a contributing factor. It may be necessary to fix the condition to successfully retry the request.
	// * ERROR - An actual failure condition through which the request could not continue.
	// * CRITICAL - A failure with significant impact to the system. Normally failed commands roll back and are just ERROR, but may be used for exceptional cases.
	Severity *SeverityEnum `json:"severity,omitempty"`

	// Timestamp The time at which the error occurred.
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// ErrorResponse A standard response body used for all non-2xx REST responses.
type ErrorResponse struct {
	// HttpStatusCode Possible HTTP status values of completed or failed jobs.
	// * 200 - OK - Successful completion, with a response body.
	// * 201 - Created - Successful completion of a create request (POST to collection resource).
	// * 202 - Accepted - Job has been started. Response body is a job resource instance. Response status and body are available from job when it completes.
	// * 204 - No Content - Successful completion, without a response body.
	// * 206 - Partial Content - Paged response to a collection query.
	// * 299 - Completed with Messages - Core request completed but has messages for client. Ancillary portions of request may have failed. Few requests should be able to return this, as the intent is for requests to be atomic - to either succeed or roll back on failure.
	// * 400 - Invalid Request - The request is incorrect. To the extent possible, validate requests up front and use this code. Details in the response body.
	// * 401 - Unauthorized - The request cannot be authenticated.
	// * 403 - Forbidden - The request is not allowed for this client.
	// * 404 - Not Found - The id value in the request URL is not valid.
	// * 409 - Conflict - The request could not be completed due to a conflict with the current state of the target resource.
	// * 422 - Operation Failed - The request failed during execution.
	// * 429 - Too Many Requests - This particular client needs to slow down and take it easy. Retry after a delay.
	// * 500 - Internal Error - This means the product has a bug and customer should contact support.
	// * 503 - Service Unavailable - The service is temporarily unavailable. Try again later.
	HttpStatusCode *HTTPStatusEnum `json:"http_status_code,omitempty"`

	// Messages A list of messages describing the failure encountered by this request. At least
	// one will be of Error severity because Info and Warning conditions do not cause
	// the request to fail.
	Messages *[]ErrorMessage `json:"messages,omitempty"`
}

// GenerateMeetingSummaryRequest defines model for GenerateMeetingSummaryRequest.
type GenerateMeetingSummaryRequest struct {
	MeetingId     string                `json:"meeting_id"`
	MeetingTitle  string                `json:"meeting_title"`
	Transcription []MemberTranscription `json:"transcription"`
}

// GenerateMeetingSummaryResponse defines model for GenerateMeetingSummaryResponse.
type GenerateMeetingSummaryResponse struct {
	MeetingId *string `json:"meeting_id,omitempty"`
}

// HTTPStatusEnum Possible HTTP status values of completed or failed jobs.
// * 200 - OK - Successful completion, with a response body.
// * 201 - Created - Successful completion of a create request (POST to collection resource).
// * 202 - Accepted - Job has been started. Response body is a job resource instance. Response status and body are available from job when it completes.
// * 204 - No Content - Successful completion, without a response body.
// * 206 - Partial Content - Paged response to a collection query.
// * 299 - Completed with Messages - Core request completed but has messages for client. Ancillary portions of request may have failed. Few requests should be able to return this, as the intent is for requests to be atomic - to either succeed or roll back on failure.
// * 400 - Invalid Request - The request is incorrect. To the extent possible, validate requests up front and use this code. Details in the response body.
// * 401 - Unauthorized - The request cannot be authenticated.
// * 403 - Forbidden - The request is not allowed for this client.
// * 404 - Not Found - The id value in the request URL is not valid.
// * 409 - Conflict - The request could not be completed due to a conflict with the current state of the target resource.
// * 422 - Operation Failed - The request failed during execution.
// * 429 - Too Many Requests - This particular client needs to slow down and take it easy. Retry after a delay.
// * 500 - Internal Error - This means the product has a bug and customer should contact support.
// * 503 - Service Unavailable - The service is temporarily unavailable. Try again later.
type HTTPStatusEnum int

// MemberTranscription defines model for MemberTranscription.
type MemberTranscription struct {
	Content    string    `json:"content"`
	MemberName string    `json:"member_name"`
	Timestamp  time.Time `json:"timestamp"`
}

// SeverityEnum The severity of the condition.
// * INFO - Information that may be of use in understanding the failure. It is not a problem to fix.
// * WARNING - A condition that isn't a failure, but may be unexpected or a contributing factor. It may be necessary to fix the condition to successfully retry the request.
// * ERROR - An actual failure condition through which the request could not continue.
// * CRITICAL - A failure with significant impact to the system. Normally failed commands roll back and are just ERROR, but may be used for exceptional cases.
type SeverityEnum string

// GenerateMeetingSummaryJSONRequestBody defines body for GenerateMeetingSummary for application/json ContentType.
type GenerateMeetingSummaryJSONRequestBody = GenerateMeetingSummaryRequest
